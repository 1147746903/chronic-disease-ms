<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comvee.cdms.dybloodsugar.mapper.DYMemberSensorPOMapper">
    <resultMap id="BaseResultMap" type="com.comvee.cdms.dybloodsugar.po.DYMemberSensorPO">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="sid" jdbcType="BIGINT" property="sid"/>
        <result column="sensor_no" jdbcType="VARCHAR" property="sensorNo"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="monitoring_time" jdbcType="VARCHAR" property="monitoringTime"/>
        <result column="modify_dt" jdbcType="VARCHAR" property="modifyDt"/>
        <result column="insert_dt" jdbcType="VARCHAR" property="insertDt"/>
        <result column="is_valid" jdbcType="TINYINT" property="isValid"/>
        <result column="run_status" jdbcType="TINYINT" property="runStatus"/>
        <result column="operation_type" jdbcType="TINYINT" property="operationType"/>
        <result column="operation_id" jdbcType="BIGINT" property="operationId"/>
        <result column="bind_type" jdbcType="BIGINT" property="bindType"/>
        <result column="app_id" jdbcType="VARCHAR" property="appId"/>
    </resultMap>

    <resultMap id="showSensorVO" type="com.comvee.cdms.dybloodsugar.vo.MyShowSensorVO">
        <id column="sid" jdbcType="BIGINT" property="sid"/>
        <result column="sensor_no" jdbcType="VARCHAR" property="sensorNo"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="monitoring_time" jdbcType="VARCHAR" property="monitoringTime"/>
        <result column="modify_dt" jdbcType="VARCHAR" property="modifyDt"/>
        <result column="insert_dt" jdbcType="VARCHAR" property="insertDt"/>
        <result column="is_valid" jdbcType="TINYINT" property="isValid"/>
        <result column="run_status" jdbcType="TINYINT" property="runStatus"/>
        <result column="operation_type" jdbcType="TINYINT" property="operationType"/>
        <result column="operation_id" jdbcType="BIGINT" property="operationId"/>
        <result column="member_name" jdbcType="VARCHAR" property="bindMemberName"/>
        <result column="bind_type" jdbcType="BIGINT" property="bindType"/>
    </resultMap>


    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        sid, sensor_no, member_id, monitoring_time, modify_dt, insert_dt, is_valid, run_status,
        operation_type, operation_id ,bind_type ,app_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from dy_member_sensor
        where sid = #{sid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from dy_member_sensor
        where sid = #{sid,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.comvee.cdms.dybloodsugar.po.DYMemberSensorPO">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dy_member_sensor (sid, sensor_no, member_id,
        monitoring_time, modify_dt, insert_dt,
        is_valid, run_status, operation_type,
        operation_id)
        values (#{sid,jdbcType=BIGINT}, #{sensorNo,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT},
        #{monitoringTime,jdbcType=VARCHAR}, #{modifyDt,jdbcType=VARCHAR}, #{insertDt,jdbcType=VARCHAR},
        #{isValid,jdbcType=TINYINT}, #{runStatus,jdbcType=TINYINT}, #{operationType,jdbcType=TINYINT},
        #{operationId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.comvee.cdms.dybloodsugar.po.DYMemberSensorPO">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dy_member_sensor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="sensorNo != null">
                sensor_no,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="monitoringTime != null">
                monitoring_time,
            </if>
            <if test="modifyDt != null">
                modify_dt,
            </if>
            <if test="insertDt != null">
                insert_dt,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="runStatus != null">
                run_status,
            </if>
            <if test="operationType != null">
                operation_type,
            </if>
            <if test="operationId != null">
                operation_id,
            </if>
            <if test="bindType != null">
                bind_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=BIGINT},
            </if>
            <if test="sensorNo != null">
                #{sensorNo,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="monitoringTime != null">
                #{monitoringTime,jdbcType=VARCHAR},
            </if>
            <if test="modifyDt != null">
                #{modifyDt,jdbcType=VARCHAR},
            </if>
            <if test="insertDt != null">
                #{insertDt,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=TINYINT},
            </if>
            <if test="runStatus != null">
                #{runStatus,jdbcType=TINYINT},
            </if>
            <if test="operationType != null">
                #{operationType,jdbcType=TINYINT},
            </if>
            <if test="operationId != null">
                #{operationId,jdbcType=BIGINT},
            </if>
            <if test="bindType != null">
                #{bindType},
            </if>
        </trim>
    </insert>

    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dy_member_sensor
        <set>
            <if test="record.sid != null">
                sid = #{record.sid,jdbcType=BIGINT},
            </if>
            <if test="record.sensorNo != null">
                sensor_no = #{record.sensorNo,jdbcType=VARCHAR},
            </if>
            <if test="record.memberId != null">
                member_id = #{record.memberId,jdbcType=BIGINT},
            </if>
            <if test="record.monitoringTime != null">
                monitoring_time = #{record.monitoringTime,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyDt != null">
                modify_dt = #{record.modifyDt,jdbcType=VARCHAR},
            </if>
            <if test="record.insertDt != null">
                insert_dt = #{record.insertDt,jdbcType=VARCHAR},
            </if>
            <if test="record.isValid != null">
                is_valid = #{record.isValid,jdbcType=TINYINT},
            </if>
            <if test="record.runStatus != null">
                run_status = #{record.runStatus,jdbcType=TINYINT},
            </if>
            <if test="record.operationType != null">
                operation_type = #{record.operationType,jdbcType=TINYINT},
            </if>
            <if test="record.operationId != null">
                operation_id = #{record.operationId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dy_member_sensor
        set sid = #{record.sid,jdbcType=BIGINT},
        sensor_no = #{record.sensorNo,jdbcType=VARCHAR},
        member_id = #{record.memberId,jdbcType=BIGINT},
        monitoring_time = #{record.monitoringTime,jdbcType=VARCHAR},
        modify_dt = #{record.modifyDt,jdbcType=VARCHAR},
        insert_dt = #{record.insertDt,jdbcType=VARCHAR},
        is_valid = #{record.isValid,jdbcType=TINYINT},
        run_status = #{record.runStatus,jdbcType=TINYINT},
        operation_type = #{record.operationType,jdbcType=TINYINT},
        operation_id = #{record.operationId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.comvee.cdms.dybloodsugar.po.DYMemberSensorPO">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dy_member_sensor
        <set>
            <if test="sensorNo != null">
                sensor_no = #{sensorNo,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="monitoringTime != null">
                monitoring_time = #{monitoringTime,jdbcType=VARCHAR},
            </if>
            <if test="modifyDt != null">
                modify_dt = #{modifyDt,jdbcType=VARCHAR},
            </if>
            <if test="insertDt != null">
                insert_dt = #{insertDt,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=TINYINT},
            </if>
            <if test="runStatus != null">
                run_status = #{runStatus,jdbcType=TINYINT},
            </if>
            <if test="operationType != null">
                operation_type = #{operationType,jdbcType=TINYINT},
            </if>
            <if test="operationId != null">
                operation_id = #{operationId,jdbcType=BIGINT},
            </if>
        </set>
        where sid = #{sid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.comvee.cdms.dybloodsugar.po.DYMemberSensorPO">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dy_member_sensor
        set sensor_no = #{sensorNo,jdbcType=VARCHAR},
        member_id = #{memberId,jdbcType=BIGINT},
        monitoring_time = #{monitoringTime,jdbcType=VARCHAR},
        modify_dt = #{modifyDt,jdbcType=VARCHAR},
        insert_dt = #{insertDt,jdbcType=VARCHAR},
        is_valid = #{isValid,jdbcType=TINYINT},
        run_status = #{runStatus,jdbcType=TINYINT},
        operation_type = #{operationType,jdbcType=TINYINT},
        operation_id = #{operationId,jdbcType=BIGINT}
        where sid = #{sid,jdbcType=BIGINT}
    </update>

    <select id="listShowSensorForMe" parameterType="java.lang.String" resultMap="showSensorVO">
        SELECT ms.*
        FROM dy_member_sensor ms,
             dy_member_sensor_show mss
        WHERE ms.sid = mss.member_sensor_sid
          AND ms.is_valid = 1
          AND ms.member_id = #{memberId}
        GROUP BY ms.sid
        order by ms.insert_dt desc
    </select>

    <select id="listShowSensorForOther" parameterType="java.lang.String" resultMap="showSensorVO">
        SELECT ms.*, m.member_name
        FROM dy_member_sensor ms
                 JOIN dy_member_sensor_show mss
                      ON ms.sid = mss.member_sensor_sid
                 JOIN t_member m
                      ON ms.member_id = m.member_id
        WHERE ms.is_valid = 1
          AND mss.member_id = #{memberId}
        order by ms.insert_dt desc
    </select>

    <select id="listShowSensorBySensorSid" parameterType="java.lang.String"
            resultType="com.comvee.cdms.dybloodsugar.vo.ShowSensorVO">
        SELECT mss.sid               sid,
               mss.member_sensor_sid memberSensorSid,
               mss.is_valid          isValid,
               mss.inser_dt          inserDt,
               mss.modify_dt         modifyDt,
               mss.member_id         memberId,
               t.member_name         receiveMemberName
        FROM dy_member_sensor_show mss,
             t_member t
        WHERE mss.member_id = t.member_id
          AND mss.member_sensor_sid = #{sensorSid}
    </select>

    <select id="countBindNumber" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM (
                 SELECT ms.*
                 FROM t_doctor_member dm
                          JOIN dy_member_sensor ms ON dm.member_id = ms.member_id
                 WHERE dm.is_valid = 1
                   AND ms.is_valid = 1
                   AND doctor_id = #{doctorId}
                 GROUP BY ms.member_id) t
    </select>

    <select id="countBindNumberForHos" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM (
                 SELECT ms.*
                 FROM t_member_checkin_info mc
                          JOIN dy_member_sensor ms ON mc.member_id = ms.member_id
                 WHERE mc.is_valid = 1
                   AND ms.is_valid = 1
                   AND mc.checkin_status = 1
                   AND hospital_id = #{hospitalId}
                 GROUP BY ms.member_id) t
    </select>

    <select id="listSensorMember" parameterType="java.lang.String"
            resultType="com.comvee.cdms.dybloodsugar.vo.MemberSensorVO">
        SELECT *
        FROM (
                 SELECT m.member_id        memberId,
                        m.member_name      memberName,
                        m.birthday         birthday,
                        m.sex,
                        m.is_diabetes      isDiabetes,
                        m.diabetes_type    diabetesType,
                        m.diabetes_date    diabetesDate,
                        ms.sid             sid,
                        ms.sensor_no       sensorNo,
                        ms.monitoring_time monitoringTime,
                        ms.modify_dt       modifyDt,
                        ms.insert_dt       insertDt,
                        ms.is_valid        isValid,
                        ms.run_status      runStatus,
                        ms.operation_type  operationType,
                        ms.operation_id    operationId,
                        m.pic_url          picUrl
                 FROM t_doctor_member dm
                          JOIN t_member m
                               ON dm.member_id = m.member_id AND dm.is_valid = 1 and m.is_valid = 1
                          JOIN dy_member_sensor ms
                               ON m.member_id = ms.member_id
                 WHERE ms.is_valid = 1
                   AND dm.doctor_id = #{doctorId}
                 ORDER BY ms.monitoring_time DESC) temp
        GROUP BY temp.memberId
    </select>

    <select id="listSensorMemberForHos" parameterType="java.lang.String"
            resultType="com.comvee.cdms.dybloodsugar.vo.MemberSensorVO">
        SELECT *
        FROM (
                 SELECT m.member_id        memberId,
                        m.member_name      memberName,
                        m.birthday         birthday,
                        m.sex,
                        m.is_diabetes      isDiabetes,
                        m.diabetes_type    diabetesType,
                        m.diabetes_date    diabetesDate,
                        ms.sid             sid,
                        ms.sensor_no       sensorNo,
                        ms.monitoring_time monitoringTime,
                        ms.modify_dt       modifyDt,
                        ms.insert_dt       insertDt,
                        ms.is_valid        isValid,
                        ms.run_status      runStatus,
                        ms.operation_type  operationType,
                        ms.operation_id    operationId,
                        m.pic_url          picUrl
                 FROM t_member_checkin_info mc
                          JOIN t_member m
                               ON mc.member_id = m.member_id AND mc.is_valid = 1 AND mc.is_valid = 1 AND
                                  mc.checkin_status = 1
                          JOIN dy_member_sensor ms
                               ON m.member_id = ms.member_id
                 WHERE ms.is_valid = 1
                   AND mc.hospital_id = #{hospitalId}
                 ORDER BY ms.monitoring_time DESC) temp
        GROUP BY temp.memberId
    </select>

    <select id="countMemberBindCount" parameterType="string" resultType="java.lang.Long">
        select count(1)
        from (
                 select ms.sid
                 from dy_member_sensor ms
                          join t_doctor_member d
                               on d.doctor_id = #{doctorId} and ms.member_id = d.member_id
                 where ms.is_valid = 1
                 group by ms.member_id
             ) q
    </select>

    <select id="countInHospitalBindSensorPatient" resultType="long">
        select count(distinct t.member_id)
        from t_member_checkin_info t,
             dy_member_sensor q
        where t.member_id = q.member_id
          and t.is_valid = 1
          and q.is_valid = 1
          and t.department_id = #{departmentId}
    </select>

    <select id="listMemberAllSensor" resultMap="BaseResultMap">
        select r.sid, r.sensor_no, r.insert_dt, r.run_status, r.monitoring_time, r.member_id, r.bind_type
        from (
                 select t.sid, t.sensor_no, t.insert_dt, t.run_status, t.monitoring_time, t.member_id, t.bind_type
                 from dy_member_sensor t
                 where t.is_valid = 1
                   and t.member_id = #{memberId}
                 union ALL
                 select q.sid, q.sensor_no, q.insert_dt, q.run_status, q.monitoring_time, q.member_id, q.bind_type
                 from dy_member_sensor q,
                      dy_member_sensor_show w
                 where q.sid = w.member_sensor_sid
                   and q.is_valid = 1
                   and w.is_valid = 1
                   and w.member_id = #{memberId}
             ) r
        order by r.insert_dt desc
    </select>

    <select id="countMemberSensor" resultType="long">
        select count(r.member_id)
        from dy_member_sensor r
        where r.is_valid = 1
          and r.member_id = #{memberId}
    </select>

    <select id="getDYMemberSensorPO" resultMap="BaseResultMap">
        select sid,
               sensor_no,
               member_id,
               monitoring_time,
               modify_dt,
               insert_dt,
               is_valid,
               run_status,
               operation_type,
               operation_id,
               bind_type
        from dy_member_sensor
        where is_valid = 1
          and sensor_no = #{sensorNo} limit 1
    </select>

    <select id="getCountHomeDYMemberSensorPO" resultMap="BaseResultMap">
        SELECT m.member_id ,ms.sensor_no , ms.insert_dt
        FROM t_doctor_member dm
        JOIN t_member m ON dm.member_id = m.member_id
        AND dm.is_valid = 1 and m.is_valid = 1
        JOIN dy_member_sensor ms ON m.member_id = ms.member_id
        and not exists(
        select 1 from t_member_checkin_info dc where dc.is_valid = 1 and dc.checkin_status = 1
        and dc.hospital_id = #{hospitalId} and dc.member_id = m.member_id
        )
        WHERE ms.is_valid = 1
        <if test="doctorIds!=null and doctorIds.size()>0">
            and dm.doctor_id in
            <foreach collection="doctorIds" index="index" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY dm.insert_dt

    </select>

    <select id="getCountHomeDYMemberSensorPOByDoctorId" resultMap="BaseResultMap">
        SELECT m.member_id, ms.sensor_no, ms.insert_dt
        FROM t_doctor_member dm
                 JOIN t_member m ON dm.member_id = m.member_id
            AND dm.is_valid = 1 and m.is_valid = 1
                 JOIN dy_member_sensor ms ON m.member_id = ms.member_id
            and not exists(
                    select 1
                    from t_member_checkin_info dc
                    where dc.is_valid = 1
                      and dc.checkin_status = 1
                      and dc.hospital_id = #{hospitalId}
                      and dc.member_id = m.member_id
                )
        WHERE ms.is_valid = 1
          AND dm.doctor_id = #{doctorId}
    </select>

    <select id="getCountHospitalDYMemberSensorPO" resultMap="BaseResultMap">
        SELECT ds.sensor_no,
               ds.member_id,
               ds.insert_dt,
               tm.member_name
        FROM dy_member_sensor ds
                 JOIN t_member_checkin_info mc ON mc.member_id = ds.member_id
                 JOIN t_member tm ON tm.member_id = ds.member_id
            AND tm.is_valid = 1
            AND mc.checkin_status = 1
            AND mc.is_valid = 1
        WHERE ds.is_valid = 1
          AND mc.hospital_id = #{hospitalId}
        ORDER BY ds.insert_dt
    </select>

    <select id="getCountHospitalDYMemberSensor" resultMap="BaseResultMap">
        SELECT ds.sensor_no,
               ds.member_id,
               ds.insert_dt,
               tm.member_name
        FROM dy_member_sensor ds
                 JOIN t_member_checkin_info ci ON ci.member_id = ds.member_id
                 JOIN t_member tm ON tm.member_id = ds.member_id
        WHERE ds.is_valid = 1
          AND ci.is_valid = 1
          AND tm.is_valid = 1
          AND ci.checkin_status = 1
          and ci.department_id = #{departmentId}
          AND ci.hospital_id = #{hospitalId}
        ORDER BY ds.insert_dt
    </select>

    <select id="getCountHospitalByDataAuth" resultMap="BaseResultMap">
        SELECT
        ds.sensor_no,
        ds.member_id,
        ds.insert_dt
        FROM
        dy_member_sensor ds
        JOIN t_member_checkin_info ci ON ci.member_id = ds.member_id
        WHERE
        ds.is_valid = 1
        AND ci.is_valid = 1
        <if test="listDataAuth!=null and listDataAuth.size()>0">
            and ci.department_id in
            <foreach collection="listDataAuth" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY ds.insert_dt
    </select>

    <select id="getDYMemberSensorPOByMemberId" resultMap="BaseResultMap">
        select sensor_no, insert_dt, member_id
        from dy_member_sensor
        where is_valid = 1
          and member_id = #{memberId}
    </select>
    <select id="hasValidSensor" parameterType="String" resultType="boolean">
        select count(sensor_no) > 0
        from dy_member_sensor
        where is_valid = 1
          and sensor_no = #{sensorNo}
    </select>
    <select id="getMemberSensorBySensorNo" resultMap="BaseResultMap" parameterType="String">
        select *
        from dy_member_sensor
        where is_valid = 1
          and sensor_no = #{sensorNo}
        order by insert_dt desc limit 1
    </select>
    <update id="unBindSensor" parameterType="com.comvee.cdms.dybloodsugar.dto.UnBindSensorDTO">
        update dy_member_sensor
        set run_status = 2, is_valid = 0
        where member_id = #{memberId}
          and sensor_no = #{sensorNo}
    </update>
    <select id="listMemberSensor" parameterType="com.comvee.cdms.dybloodsugar.dto.DyMemberSensorDTO" resultMap="BaseResultMap">
        select *
        from dy_member_sensor
        where  1=1
        <if test=" memberId != null and memberId != '' ">
            and member_id = #{memberId}
        </if>
        <if test=" sensorNo != null and sensorNo != '' ">
            and sensor_no = #{sensorNo}
        </if>
        <if test=" valid != null ">
            and is_valid = #{valid}
        </if>
        <if test=" runStatusList != null ">
            and run_status in
            <foreach collection="runStatusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        order by insert_dt desc
    </select>
</mapper>