<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comvee.cdms.authority.mapper.AuthorityMapper">

  <resultMap id="authority" type="com.comvee.cdms.authority.model.po.AuthorityPO">
    <id column="sid" jdbcType="BIGINT" property="sid" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="insert_dt" jdbcType="TIMESTAMP" property="insertDt" />
    <result column="available" jdbcType="TINYINT" property="available" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="a_type" jdbcType="TINYINT" property="aType" />
  </resultMap>


  <insert id="addAuthority" parameterType="com.comvee.cdms.authority.model.po.AuthorityPO">
    insert into t_authority (sid, permission, description,pid,  )
    values (#{sid,jdbcType=BIGINT}, #{permission,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
        #{pid,jdbcType=BIGINT}, #{aType,jdbcType=TINYINT})
  </insert>

  <select id="listRoleAuthority" resultMap="authority">
    select q.available,q.description,q.permission,q.pid,q.sid,q.a_type
    from t_role_authority t , t_authority q
    where t.authority_id = q.sid
    and t.role_id in
    <foreach collection="roleList" open="(" close=")" item="item" separator=",">
      #{item}
    </foreach>
  </select>

  <insert id="addRoleAuthority">
    <foreach collection="list" item="item">
        INSERT INTO `t_role_authority` (`sid`, `role_id`, `authority_id`, `insert_dt`)
        VALUES (#{item.sid}, #{item.roleId}, #{item.authorityId}, now());
    </foreach>
  </insert>

  <delete id="deleteRoleAuthority">
    delete t from t_role_authority t where t.role_id = #{roleId}
  </delete>

  <select id="listAuthority" resultMap="authority">
    SELECT t.available,t.description,t.insert_dt,t.permission
    ,t.pid,t.show_status,t.sid,t.a_type FROM `t_authority` t
    <where>
      <if test="available != null and '' != available">
         and t.available = #{available}
      </if>
      <if test="showStatus != null and '' != showStatus">
        and t.show_status = #{showStatus}
      </if>
      <if test="aType != null and '' != aType">
        and t.a_type = #{aType}
      </if>
    </where>
    order by CONVERT(t.description USING gbk) ASC
  </select>
</mapper>