package com.comvee.cdms.dybloodsugar.mapper;

import com.comvee.cdms.dybloodsugar.dto.DyMemberSensorDTO;
import com.comvee.cdms.dybloodsugar.dto.UnBindSensorDTO;
import com.comvee.cdms.dybloodsugar.po.DYMemberSensorPO;
import com.comvee.cdms.dybloodsugar.vo.MemberSensorVO;
import com.comvee.cdms.dybloodsugar.vo.MyShowSensorVO;
import com.comvee.cdms.dybloodsugar.vo.ShowSensorVO;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface DYMemberSensorPOMapper {



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dy_member_sensor
     *
     * @mbg.generated
     */
    int insert(DYMemberSensorPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dy_member_sensor
     *
     * @mbg.generated
     */
    int insertSelective(DYMemberSensorPO record);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dy_member_sensor
     *
     * @mbg.generated
     */
    DYMemberSensorPO selectByPrimaryKey(String sid);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dy_member_sensor
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(DYMemberSensorPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dy_member_sensor
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(DYMemberSensorPO record);

    /**
     * 加载别人分享的列表
     * @param memberId
     * @return
     */
    List<MyShowSensorVO> listShowSensorForOther(@Param("memberId") String memberId);

    /**
     * 加载我分享的列表
     * @param memberId
     * @return
     */
    List<MyShowSensorVO> listShowSensorForMe(@Param("memberId") String memberId);

    /**
     * 根据sensorId获取分享对象
     * @param sensorId
     * @return
     */
    List<ShowSensorVO> listShowSensorBySensorSid(@Param("sensorSid") String sensorSid);

    /**
     * 获取动态血糖绑定人数(门诊居家)
     * @param doctorId
     * @return
     */
    Long countBindNumber(@Param("doctorId") String doctorId ,@Param("hospitalId") String hospitalId);

    /**
     * 获取动态血糖绑定人数(住院患者)
     * @param hospitalId
     * @return
     */
    Long countBindNumberForHos(@Param("hospitalId") String hospitalId);

    /**
     * 获取动态血糖绑定列表(门诊居家)
     * @param doctorId
     * @return
     */
    List<MemberSensorVO> listSensorMember(@Param("doctorId") String doctorId ,@Param("hospitalId") String hospitalId);

    /**
     * 获取动态血糖绑定列表(住院患者)
     * @param hospitalId
     * @return
     */
    List<MemberSensorVO> listSensorMemberForHos(@Param("hospitalId") String hospitalId);

    /**
     * 佩戴探头患者数量
     * @param doctorId
     * @return
     */
    Long countMemberBindCount(@Param("doctorId") String doctorId);

    /**
     * 统计住院患者绑定探头人数
     * @param departmentId
     * @return
     */
    Long countInHospitalBindSensorPatient(@Param("departmentId") String departmentId);

    /**
     * 加载患者可用的所有探头（包括分享）
     * @param memberId
     * @return
     */
    List<DYMemberSensorPO> listMemberAllSensor(@Param("memberId") String memberId);


    /**
     * 统计患者探头数量
     * @param memberId
     * @return
     */
    long countMemberSensor(@Param("memberId") String memberId);

    /**
     * 根据sensorNo获取患者绑定探头的数据
     * @param sensorNo
     * @return
     */
    DYMemberSensorPO getDYMemberSensorPO(@Param("sensorNo") String sensorNo);

    /**
     * 统计患者绑定探头的居家人数
     * @return
     */
    List<DYMemberSensorPO> getCountHomeDYMemberSensorPOByDoctorId(@Param("doctorId") String doctorId,@Param("hospitalId") String hospitalId);

    List<DYMemberSensorPO> getCountHomeDYMemberSensorPO(@Param("hospitalId") String hospitalId,@Param("doctorIds") List<String> doctorIds);

    /**
     * 统计患者绑定探头的院内人数
     * @return
     */
    List<DYMemberSensorPO> getCountHospitalByDataAuth(@Param("doctorId") String doctorId,@Param("listDataAuth") List<String> listDataAuth);

    /**
     * 获取动态血糖绑定列表(住院患者)
     * @param hospitalId
     * @return
     */
    List<DYMemberSensorPO> getCountHospitalDYMemberSensorPO(@Param("hospitalId") String hospitalId);
    /**
     * 获取动态血糖绑定列表(住院患者)
     * @return
     */
    List<DYMemberSensorPO> getCountHospitalDYMemberSensor(@Param("departmentId") String departmentId,@Param("hospitalId") String hospitalId);

    /**
     * 根据患者id获取患者绑定探头数据
     * @param memberId
     * @return
     */
    List<DYMemberSensorPO> getDYMemberSensorPOByMemberId(String memberId);

    boolean hasValidSensor(String sensorNo);

    DYMemberSensorPO getMemberSensorBySensorNo(String sensorNo);

    int unBindSensor(UnBindSensorDTO dto);

    List<DYMemberSensorPO> listMemberSensor(DyMemberSensorDTO dto);
}